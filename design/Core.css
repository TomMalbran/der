/**
 * Fonts
 */
@font-face {
    font-family: "Lato";
    font-style: normal;
    font-weight: normal;
    src: local("Lato"), url("../fonts/lato-regular.ttf") format("truetype");
}
@font-face {
    font-family: "Lato";
    font-style: normal;
    font-weight: bold;
    src: local("Lato"), url("../fonts/lato-bold.ttf") format("truetype");
}
@font-face {
    font-family: "Means";
    font-style: normal;
    font-weight: normal;
    src: local("Means"), url("../fonts/means-regular.woff2") format("woff2");
}



/**
 * Main Styles
 */
html, body {
    margin: 0;
    padding: 0;
    border: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    background-color: var(--background-color);
}
html, body, input {
    color: var(--main-color);
    font-size: 14px;
    font-family: var(--main-font);
}
svg {
    fill: var(--main-color);
}



/**
 * Buttons
 */
.btn {
    display: inline-block;
    padding: 8px 16px;
    background-color: var(--card-color);
    border: 1px solid var(--main-color);
    border-radius: 9999px;
    color: var(--main-color);
    font-family: var(--main-font);
    font-size: 14px;
    text-align: center;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.2s;
}
.btn:hover {
    color: var(--white-color);
    background-color: var(--main-color);
}

.btn-fill {
    color: white;
    background-color: black;
    border-color: black;
}
.btn-fill:hover {
    color: black;
    background-color: white;
}

.btn-small {
    padding: 4px 8px;
    font-size: 12px;
}
.btn + .btn {
    margin-left: 8px;
}



/**
 * Input Fields
 */
input {
    appearance: none;
}
input:focus {
    outline: none;
    border-color: var(--main-color);
}

.field {
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    gap: 6px;
    min-height: 50px;
    padding: 6px 12px;
    text-align: left;
    margin-bottom: 16px;
    border: 1px solid var(--input-color);
    border-radius: var(--border-radius);
}
.field > label,
.file-input label {
    margin: 0;
    font-size: 11px;
    line-height: 1;
    color: var(--lighter-color);
}
.field > input[type="text"],
.field > input[type="number"] {
    display: block;
    width: 100%;
    box-sizing: border-box;
    min-width: 320px;
    padding: 0;
    border: none;
    border-radius: 0;
    background-color: transparent;
}

.error {
    display: none;
    color: rgb(188, 28, 72);
    font-size: 12px;
}



/**
 * File Input
 */
.file-input section {
    display: flex;
    gap: 6px;
}
.file-input section > div:first-child {
    flex-grow: 2;
    display: flex;
    flex-direction: column;
    gap: 6px;
}
.file-input section > div:first-child > div {
    min-height: 17px;
    font-size: 14px;
}
.file-input section > div:last-child {
    display: flex;
    align-items: flex-end;
}
.file-input section > div:last-child .close {
    margin: 0 6px 8px 0;
}



/**
 * Checkbox Input
 */
@keyframes tick {
    from { transform: scale(0); }
    to   { transform: scale(1); }
}

.checkbox-box {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 8px;
}
.checkbox-input {
    display: flex;
    align-items: center;
    color: var(--main-color);
    font-size: 14px;
    overflow: hidden;
}
.checkbox-input div {
    overflow: hidden;
    text-overflow: ellipsis;
}
.checkbox-input input[type="checkbox"] {
    appearance: none;
    position: relative;
    flex-shrink: 0;
    width: 16px;
    height: 16px;
    margin: 0 8px 0 0;
    padding: 0;
    outline: 0;
    cursor: pointer;
    border: 1px solid var(--input-color);
    border-radius: var(--input-radius);
    transition: all ease-in-out 0.2s;
}
.checkbox-input input[type="checkbox"]:checked:after {
    content: "âœ•";
    position: absolute;
    top: -1px;
    left: -1px;
    right: -1px;
    bottom: -1px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 11px;
    color: var(--primary-color);
    background-color: var(--main-color);
    color: var(--white-color);
    border-radius: var(
    --input-radius);
    animation: tick 0.4s cubic-bezier(0.175, 0.885, 0.320, 1.275);
}
.checkbox-input input[type="checkbox"]:disabled {
    background-color: rgb(245, 245, 245);
    color: rgb(175, 175, 175);
}

.checkbox-input input[type="checkbox"]:not(:disabled):hover,
.checkbox-input input[type="checkbox"]:focus {
    border-color: var(--primary-color);
    outline: none;
}



/**
 * Toggle Input
 */
.toggle-input {
    --toggle-size: 18px;
    --toggle-spacing: 2px;

    display: flex;
    align-items: center;
    margin-bottom: 16px;
}
.toggle-input input[role="switch"] {
    margin-right: 12px;
}

input[role="switch"] {
    appearance: none;
    flex-shrink: 0;
    display: inline-block;
    position: relative;
    margin: 0;
    border: none;
    outline-offset: 0;
    box-sizing: content-box;
    cursor: pointer;
    background: var(--lighter-color);
    width: calc(var(--toggle-size) * 2 + var(--toggle-spacing) * 2);
    height: calc(var(--toggle-size) + var(--toggle-spacing) * 2);
    border-radius: var(--toggle-size);
    transition: all .25s ease;
}
input[role="switch"]:before {
    content: "";
    position: absolute;
    top: var(--toggle-spacing);
    left: var(--toggle-spacing);
    width: var(--toggle-size);
    height: var(--toggle-size);
    background: white;
    border-radius: 50%;
    transition: transform .2s ease;
}
input[role="switch"]:checked {
    background-color: black;
}
input[role="switch"]:checked:before {
    transform: translateX(var(--toggle-size));
}
input[role="switch"]:not(:disabled):hover,
input[role="switch"]:focus {
    box-shadow: 0 0 5px var(--main-color);
    outline: none;
}
input[role="switch"]:disabled {
    background-color: var(--darker-gray);
}



/**
 * Arrow
 */
.arrow {
    --arrow-color: var(--main-color);
    --arrow-size: 10px;
    --arrow-width: 10px;
    --arrow-height: 1px;
    --arrow-space: 0;
    position: relative;
    width: var(--arrow-size);
    height: var(--arrow-size);
    cursor: pointer;
}
.arrow:before,
.arrow:after {
    content: "";
    display: block;
    position: absolute;
    top: 50%;
    left: var(--arrow-space);
    width: var(--arrow-width);
    height: var(--arrow-height);
    background-color: var(--arrow-color);
    transition: all 0.2s;
    transform-origin: right center;
}
.arrow:before {
    transform: rotate(35deg);
}
.arrow:after {
    transform: rotate(-35deg);
}
.arrow:hover:before,
.arrow:active:before {
    transform: rotate(25deg);
}
.arrow:hover:after,
.arrow:active:after {
    transform: rotate(-25deg);
}



/**
 * Close
 */
.close {
    --close-color: var(--main-color);
    --close-size: 12px;
    --close-width: 12px;
    --close-height: 1px;

    position: relative;
    width: var(--close-size);
    height: var(--close-size);
    cursor: pointer;
}
.close:before,
.close:after {
    content: "";
    display: block;
    position: absolute;
    top: calc(var(--close-size) / 2);
    left: 0;
    width: var(--close-width);
    height: var(--close-height);
    background-color: var(--close-color);
    transition: all 0.2s;
}
.close:before {
    transform: rotate(45deg);
}
.close:after {
    transform: rotate(-45deg);
}
.close:hover:before,
.close:active:before {
    transform: rotate(35deg);
}
.close:hover:after,
.close:active:after {
    transform: rotate(-35deg);
}
